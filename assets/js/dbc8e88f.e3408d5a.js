"use strict";(self.webpackChunknotes=self.webpackChunknotes||[]).push([[7181],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return d}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var i=n.createContext({}),l=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(i.Provider,{value:t},e.children)},f={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=l(r),d=o,m=u["".concat(i,".").concat(d)]||u[d]||f[d]||a;return r?n.createElement(m,s(s({ref:t},p),{},{components:r})):n.createElement(m,s({ref:t},p))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,s=new Array(a);s[0]=u;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"==typeof e?e:o,s[1]=c;for(var l=2;l<a;l++)s[l]=r[l];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},3200:function(e,t,r){r.r(t),r.d(t,{assets:function(){return p},contentTitle:function(){return i},default:function(){return d},frontMatter:function(){return c},metadata:function(){return l},toc:function(){return f}});var n=r(7462),o=r(3366),a=(r(7294),r(3905)),s=["components"],c={},i=void 0,l={unversionedId:"Notes/rsync",id:"Notes/rsync",title:"rsync",description:"",source:"@site/notes/Notes/rsync.md",sourceDirName:"Notes",slug:"/Notes/rsync",permalink:"/notes/docs/Notes/rsync",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"proxmox",permalink:"/notes/docs/Notes/proxmox"},next:{title:"ssh-keygen",permalink:"/notes/docs/Notes/ssh-keygen"}},p={},f=[],u={toc:f};function d(e){var t=e.components,r=(0,o.Z)(e,s);return(0,a.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"# file\nrsync -avhP path/to/file device:path/to/targetDir\n\n# directory\nrsync -ar --info=progress2 path/to/dir device:path/to/containingDir\n")),(0,a.kt)("h1",{id:"tldr"},"tldr"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"- Transfer file from local to remote host:\n    rsync path/to/local_file remote_host:path/to/remote_directory\n\n  - Transfer file from remote host to local:\n    rsync remote_host:path/to/remote_file path/to/local_directory\n\n  - Transfer file in [a]rchive (to preserve attributes) and compressed ([z]ipped) mode with [v]erbose and [h]uman-readable [P]rogress:\n    rsync -azvhP path/to/local_file remote_host:path/to/remote_directory\n\n  - Transfer a directory and all its children from a remote to local:\n    rsync -r remote_host:path/to/remote_directory path/to/local_directory\n\n  - Transfer directory contents (but not the directory itself) from a remote to local:\n    rsync -r remote_host:path/to/remote_directory/ path/to/local_directory\n\n  - Transfer a directory [r]ecursively, in [a]rchive to preserve attributes, resolving contained soft[l]inks , and ignoring already transferred files [u]nless newer:\n    rsync -rauL remote_host:path/to/remote_file path/to/local_directory\n\n  - Transfer file over SSH and delete remote files that do not exist locally:\n    rsync -e ssh --delete remote_host:path/to/remote_file path/to/local_file\n\n  - Transfer file over SSH using a different port than the default and show global progress:\n    rsync -e 'ssh -p port' --info=progress2 remote_host:path/to/remote_file path/to/local_file \n")))}d.isMDXComponent=!0}}]);